"""Create hotel and room tables

Revision ID: d18e2394bb8e
Revises: 9b9b6fbe2542
Create Date: 2025-10-08 22:39:17.709604

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd18e2394bb8e'
down_revision: Union[str, Sequence[str], None] = '9b9b6fbe2542'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rooms', sa.Column('price', sa.Float(), nullable=False))
    op.add_column('rooms', sa.Column('availability', sa.Integer(), nullable=True))
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('rooms_hotel_id_fkey'), 'rooms', type_='foreignkey')
    op.create_foreign_key(None, 'rooms', 'hotels', ['hotel_id'], ['id'])
    op.drop_column('rooms', 'price_per_night')
    op.drop_column('rooms', 'is_available')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rooms', sa.Column('is_available', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('rooms', sa.Column('price_per_night', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'rooms', type_='foreignkey')
    op.create_foreign_key(op.f('rooms_hotel_id_fkey'), 'rooms', 'hotels', ['hotel_id'], ['id'], ondelete='CASCADE')
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('rooms', 'availability')
    op.drop_column('rooms', 'price')
    # ### end Alembic commands ###
